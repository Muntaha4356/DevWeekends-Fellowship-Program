class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map <int, int> frequencymap;
        for (int i =0 ; i< nums.size(); i++){
            if(frequencymap.count(nums[i])){
                frequencymap[nums[i]]++;
            }
            else{
                frequencymap.insert({nums[i], 1});
            }
        }
        vector <vector<int>> FreqBuckets(nums.size()+1);
        for (auto i= frequencymap.begin();i!= frequencymap.end(); ++i ){ //iterating over the frequencymap
            int num = i->first;
            int freq = i-> second;

            FreqBuckets[freq].push_back(num);
        }
// auto automatically deduce the datatype
        //returning k most frequent elements 
        vector <int> answer;
        for (int i = FreqBuckets.size() - 1; i >= 0 && answer.size() < k; --i) {
            for (int num : FreqBuckets[i]) {
                answer.push_back(num);
                if (answer.size() == k) break;
            }
        }
        return answer;
    };
};
